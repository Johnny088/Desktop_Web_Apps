// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _04_Music_Collection_DB;

#nullable disable

namespace _04_Music_Collection_DB.Migrations
{
    [DbContext(typeof(MusicalCollectionDbContext))]
    partial class MusicalCollectionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BandID")
                        .HasColumnType("int");

                    b.Property<int>("GenreID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Year")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BandID");

                    b.HasIndex("GenreID");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BandID = 1,
                            GenreID = 1,
                            Name = "Master of Puppets",
                            Year = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1980)
                        },
                        new
                        {
                            Id = 2,
                            BandID = 2,
                            GenreID = 2,
                            Name = "Californication",
                            Year = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1980)
                        },
                        new
                        {
                            Id = 3,
                            BandID = 3,
                            GenreID = 3,
                            Name = "Beautiful Trauma",
                            Year = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1980)
                        },
                        new
                        {
                            Id = 4,
                            BandID = 4,
                            GenreID = 3,
                            Name = "Bangerz",
                            Year = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1980)
                        },
                        new
                        {
                            Id = 5,
                            BandID = 5,
                            GenreID = 2,
                            Name = "Blurryface",
                            Year = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1980)
                        },
                        new
                        {
                            Id = 6,
                            BandID = 6,
                            GenreID = 5,
                            Name = "A Night at the Opera",
                            Year = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1980)
                        },
                        new
                        {
                            Id = 7,
                            BandID = 7,
                            GenreID = 6,
                            Name = "The Eminem Show",
                            Year = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1980)
                        },
                        new
                        {
                            Id = 8,
                            BandID = 8,
                            GenreID = 1,
                            Name = "Slippery When Wet",
                            Year = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1980)
                        },
                        new
                        {
                            Id = 9,
                            BandID = 9,
                            GenreID = 3,
                            Name = "Divide",
                            Year = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1980)
                        },
                        new
                        {
                            Id = 10,
                            BandID = 10,
                            GenreID = 4,
                            Name = "Fireworks & Rollerblades",
                            Year = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1980)
                        });
                });

            modelBuilder.Entity("Band", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryID");

                    b.ToTable("Bands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryID = 1,
                            Name = "Metallica"
                        },
                        new
                        {
                            Id = 2,
                            CountryID = 1,
                            Name = "Red Hot Chili Peppers"
                        },
                        new
                        {
                            Id = 3,
                            CountryID = 1,
                            Name = "P!nk"
                        },
                        new
                        {
                            Id = 4,
                            CountryID = 1,
                            Name = "Miley Cyrus"
                        },
                        new
                        {
                            Id = 5,
                            CountryID = 1,
                            Name = "Twenty One Pilots"
                        },
                        new
                        {
                            Id = 6,
                            CountryID = 1,
                            Name = "Queen"
                        },
                        new
                        {
                            Id = 7,
                            CountryID = 1,
                            Name = "Eminem"
                        },
                        new
                        {
                            Id = 8,
                            CountryID = 1,
                            Name = "Bon Jovi"
                        },
                        new
                        {
                            Id = 9,
                            CountryID = 1,
                            Name = "Ed Sheeran"
                        },
                        new
                        {
                            Id = 10,
                            CountryID = 1,
                            Name = "Benson Boone"
                        });
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "The USA"
                        },
                        new
                        {
                            Id = 2,
                            Name = "The United Kingdom"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Canada"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Spain"
                        });
                });

            modelBuilder.Entity("Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Hard Rock"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Alternative Rock"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pop"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Pop Rock"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Progressive Rock"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Hip Hop"
                        });
                });

            modelBuilder.Entity("Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.ToTable("PlayLists");
                });

            modelBuilder.Entity("Track", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlbumID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumID");

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumID = 1,
                            Duration = new TimeSpan(0, 0, 5, 13, 0),
                            Name = "Battery"
                        },
                        new
                        {
                            Id = 2,
                            AlbumID = 1,
                            Duration = new TimeSpan(0, 0, 8, 36, 0),
                            Name = "Master of Puppets"
                        },
                        new
                        {
                            Id = 3,
                            AlbumID = 1,
                            Duration = new TimeSpan(0, 0, 6, 27, 0),
                            Name = "Welcome Home (Sanitarium)"
                        },
                        new
                        {
                            Id = 4,
                            AlbumID = 1,
                            Duration = new TimeSpan(0, 0, 8, 16, 0),
                            Name = "Disposable Heroes"
                        },
                        new
                        {
                            Id = 5,
                            AlbumID = 1,
                            Duration = new TimeSpan(0, 0, 5, 39, 0),
                            Name = "Leper Messiah"
                        },
                        new
                        {
                            Id = 6,
                            AlbumID = 1,
                            Duration = new TimeSpan(0, 0, 8, 27, 0),
                            Name = "Orion"
                        },
                        new
                        {
                            Id = 7,
                            AlbumID = 1,
                            Duration = new TimeSpan(0, 0, 5, 32, 0),
                            Name = "Damage, Inc."
                        },
                        new
                        {
                            Id = 8,
                            AlbumID = 2,
                            Duration = new TimeSpan(0, 0, 3, 58, 0),
                            Name = "Around the World"
                        },
                        new
                        {
                            Id = 9,
                            AlbumID = 2,
                            Duration = new TimeSpan(0, 0, 4, 30, 0),
                            Name = "Parallel Universe"
                        },
                        new
                        {
                            Id = 10,
                            AlbumID = 2,
                            Duration = new TimeSpan(0, 0, 3, 37, 0),
                            Name = "Scar Tissue"
                        },
                        new
                        {
                            Id = 11,
                            AlbumID = 2,
                            Duration = new TimeSpan(0, 0, 4, 15, 0),
                            Name = "Otherside"
                        },
                        new
                        {
                            Id = 12,
                            AlbumID = 2,
                            Duration = new TimeSpan(0, 0, 3, 18, 0),
                            Name = "Get on Top"
                        },
                        new
                        {
                            Id = 13,
                            AlbumID = 2,
                            Duration = new TimeSpan(0, 0, 5, 20, 0),
                            Name = "Californication"
                        },
                        new
                        {
                            Id = 14,
                            AlbumID = 2,
                            Duration = new TimeSpan(0, 0, 3, 51, 0),
                            Name = "Easily"
                        },
                        new
                        {
                            Id = 15,
                            AlbumID = 2,
                            Duration = new TimeSpan(0, 0, 2, 43, 0),
                            Name = "Porcelain"
                        },
                        new
                        {
                            Id = 16,
                            AlbumID = 2,
                            Duration = new TimeSpan(0, 0, 4, 0, 0),
                            Name = "Emit Remus"
                        },
                        new
                        {
                            Id = 17,
                            AlbumID = 2,
                            Duration = new TimeSpan(0, 0, 2, 37, 0),
                            Name = "I Like Dirt"
                        },
                        new
                        {
                            Id = 18,
                            AlbumID = 2,
                            Duration = new TimeSpan(0, 0, 3, 45, 0),
                            Name = "This Velvet Glove"
                        },
                        new
                        {
                            Id = 19,
                            AlbumID = 2,
                            Duration = new TimeSpan(0, 0, 4, 52, 0),
                            Name = "Savior"
                        },
                        new
                        {
                            Id = 20,
                            AlbumID = 2,
                            Duration = new TimeSpan(0, 0, 4, 13, 0),
                            Name = "Purple Stain"
                        },
                        new
                        {
                            Id = 21,
                            AlbumID = 2,
                            Duration = new TimeSpan(0, 0, 1, 52, 0),
                            Name = "Right on Time"
                        },
                        new
                        {
                            Id = 22,
                            AlbumID = 2,
                            Duration = new TimeSpan(0, 0, 3, 25, 0),
                            Name = "Road Trippin"
                        });
                });

            modelBuilder.Entity("TrackPlaylist", b =>
                {
                    b.Property<int>("TrackID")
                        .HasColumnType("int");

                    b.Property<int>("PlaylistID")
                        .HasColumnType("int");

                    b.HasKey("TrackID", "PlaylistID");

                    b.HasIndex("PlaylistID");

                    b.ToTable("TrackPlaylists");
                });

            modelBuilder.Entity("Album", b =>
                {
                    b.HasOne("Band", "Band")
                        .WithMany("Albums")
                        .HasForeignKey("BandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Genre", "Genre")
                        .WithMany("Albums")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Band");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Band", b =>
                {
                    b.HasOne("Country", "Country")
                        .WithMany("Bands")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Playlist", b =>
                {
                    b.HasOne("Category", "Category")
                        .WithMany("Playlists")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Track", b =>
                {
                    b.HasOne("Album", "Album")
                        .WithMany("Tracks")
                        .HasForeignKey("AlbumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("TrackPlaylist", b =>
                {
                    b.HasOne("Playlist", "Playlist")
                        .WithMany("TrackPlaylists")
                        .HasForeignKey("PlaylistID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Track", "Track")
                        .WithMany("TrackPlaylists")
                        .HasForeignKey("TrackID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Playlist");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("Album", b =>
                {
                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("Band", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Navigation("Playlists");
                });

            modelBuilder.Entity("Country", b =>
                {
                    b.Navigation("Bands");
                });

            modelBuilder.Entity("Genre", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("Playlist", b =>
                {
                    b.Navigation("TrackPlaylists");
                });

            modelBuilder.Entity("Track", b =>
                {
                    b.Navigation("TrackPlaylists");
                });
#pragma warning restore 612, 618
        }
    }
}
